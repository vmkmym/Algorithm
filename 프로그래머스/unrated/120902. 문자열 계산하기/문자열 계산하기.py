def solution(my_string):
    return eval(my_string)

# eval 함수로 문제를 풀 수 있으나 보안에 취약하다고 함
# 그래서 gpt한테 물어보니 ast를 알려줌 : Abstract Syntax Trees (추상 구문 트리)
# import ast

# def solution(my_string):
#     return ast.literal_eval(my_string)

'''
`ast` 모듈은 "Abstract Syntax Trees(추상 구문 트리)"를 다루는 파이썬의 내장 모듈입니다. 이 모듈은 파이썬 코드를 분석하고 구문 트리로 표현하는 데 사용됩니다.

**추상 구문 트리(Abstract Syntax Tree, AST)**란 프로그래밍 언어의 소스 코드를 문법적 구조를 나타내는 트리 구조로 변환한 것입니다. 이 구조는 프로그램의 구문(문법)을 표현하는 방법으로, 파싱된 코드의 계층적인 구조를 나타내며 각각의 노드는 프로그래밍 언어의 구문 요소를 나타냅니다.

`ast` 모듈은 파이썬 코드를 분석하여 추상 구문 트리를 만들어 주며, 이러한 구조를 통해 파이썬 코드를 보다 쉽게 이해하고 조작할 수 있습니다. 이를 통해 코드 분석, 코드 변환, 코드 검증 등 다양한 작업에 활용됩니다.

예를 들어, `ast.literal_eval()` 함수는 문자열에 포함된 파이썬 리터럴만을 평가하고 실행하므로, `eval()`과 달리 보안상 안전하게 문자열을 처리합니다. 이 함수는 문자열을 파싱하여 파이썬 리터럴을 계산하는 데 사용됩니다. 코드 실행보다는 코드를 분석하고 그 구조를 파악하는 데에 주로 활용됩니다.
'''